package com.rongdu.p2psys.borrow.dao;

import java.util.Date;
import java.util.List;

import com.rongdu.common.dao.BaseDao;
import com.rongdu.common.model.jpa.PageDataList;
import com.rongdu.p2psys.borrow.domain.Borrow;
import com.rongdu.p2psys.borrow.domain.BorrowCollection;
import com.rongdu.p2psys.borrow.domain.BorrowRepayment;
import com.rongdu.p2psys.borrow.model.BorrowCollectionModel;
import com.rongdu.p2psys.borrow.model.BorrowModel;
import com.rongdu.p2psys.borrow.model.BorrowRepaymentModel;

/**
 * 还款
 * 
 * @author sj
 * @version 2.0
 * @since 2014年2月20日
 */
public interface BorrowRepaymentDao extends BaseDao<BorrowRepayment> {

	/**
	 * 根据ID取得还款计划
	 * 
	 * @param id 主键ID
	 * @return 还款计划
	 */
	BorrowRepayment find(long id);

	/**
	 * 检查之前是否有期数未还款
	 * 
	 * @param period 期数
	 * @param borrowId 标ID
	 * @return ture：存在未还款
	 */
	boolean hasRepaymentAhead(int period, long borrowId);

	/**
	 * 根据用户ID获取借款总额
	 * 
	 * @param userId 用户ID
	 * @return 借款总额
	 */
	double getUserBorrowTotal(long userId);
	/**
	 * 根据用户ID获取还款总额
	 * @param userId 用户ID
	 * @return 待还款总额
	 */
	double getUserBorrowRepayTotal(long userId);

	/**
	 * 修改还款状态
     * 
     * @param repayId 主键ID
	 * @param status 需要更改的状态
	 * @param status_ 更改前的状态
	 */
	void updateStatus(int status, int status_, long repayId);

	/**
	 * 修改还款计划的已还数据
	 * 
	 * @param repay 还款计划
	 */
	void updateBorrowRepaymentByStatus(BorrowRepayment repay);

	/**
	 * 根据标ID和期数取得还款计划
	 * 
	 * @param borrowId 标ID
	 * @param period 期数
	 * @return 还款计划
	 */
	BorrowRepayment find(long borrowId, int period);

	/**
	 * 计算剩余待还本金
	 * @param borrowId
	 * @return
	 */
	public double getRemainderCapital(long borrowId);

	/**
	 * 本次提前还款待还利息总和
	 * @param id
	 * @param period
	 * @return
	 */
	public double getwaitRpayInterest(long borrowId, int period);

	/**
	 * 原始待还利息总额
	 * @param id
	 * @return
	 */
	public double getRemainderInterest(long borrowId);
	//JSDBET-835 wcw 2015-3-20 start
	/**
	 * 原始待还总额
	 * @param borrowId
	 * @return
	 */
	public double getRemainderRepayAccount(long borrowId) ;
	//JSDBET-835 wcw 2015-3-20 end
	
	/**
	 * 获取待还的统计信息
	 * @param userId 用户ID
	 * @return 待还的统计信息
	 */
	BorrowRepaymentModel getRepayStatistics(long userId);
	
	/**
	 * 统计某个月份的待还金额
	 * @param month 要统计的那个月份
	 * @param userId 用户ID
	 * @return 当月待还金额
	 */
	double getRepayByMonth(int month, long userId);
	/**
	 *最近一笔待还信息
	 * @param userId 用户ID
	 * @return 最近一笔待还信息
	 */
	BorrowRepayment getNextRepayByUserId(long userId);
	/**
	 * 获取某条待还记录
	 * @param tender_id
	 * @param period
	 * @return
	 */
	public BorrowRepayment getRepayByTenderIdAndPeriod(long tender_id,long period);
	/**
	 * 获取待还记录
	 * @param borrowId  标ID
	 * @param period  还款期数
	 * @param status  待还状态
	 * @return
	 */
	 BorrowRepayment getRepayByBorrowIdAndPeriodAndStatus(long borrowId,long period,long status);
	/**
	 * 统计下一个待还日期的待还次数及待还金额
	 * @param bm 待还model
	 * @param nextRepayTime 下一个待还日期
	 * @param userId 用户ID
	 * @return 待还
	 */
	BorrowRepaymentModel getBRMByCollectTime(BorrowRepaymentModel bm, Date nextRepayTime, long userId);

	/**
	 * 提前还款更新status和webstatus
	 * @param borrowRepayment
	 */
	public void updateBorrowRepaymentStatusAndWebStatus(BorrowRepayment borrowRepayment);

	/**
	 * 处理逾期垫付的状态才2更新到1
	 * @param borrowRepayment
	 */
	public void updateBorrowRepaymentStatus(BorrowRepayment borrowRepayment);

	/**
	 * 获得没有还款的利息
	 * @param period
	 * @return
	 */
	public double getWaitInterest(long borrowId, int period);

	/**
     * 待还信息查询
     */
    PageDataList<BorrowRepayment> getList(BorrowRepaymentModel model);
    
    /**
     * 待还信息查询
     */
    PageDataList<BorrowRepayment> getList(long id,int page,int size);
    
    /**
     * 获得当前标需要还的还款期数
     * @param period
     * @return
     */
    public int getCurrPeriod(long borrowId);
    
    /**
     * 获取当前担保公司催收项目个数
     */
    int getCollectionCount(long userId);
    
    /**
     * 获取当前担保公司逾期项目个数
     */
    int getOverdueCount(long userId);
    
    /**
     * 获取当前担保公司正在担保的标的信息列表
     * @param userId
     * @return 标的总信息
     */
    List<BorrowRepayment> getGuaranteeingList(String userId);     
    
    /**
     * 获取当前担保公司要催收的标的信息列表
     * @param userId
     * @return 标的总信息
     */
    List<BorrowRepayment> getUrgeGuaranteeList(String userId);    
    
    /**
     * 获取当前担保公司逾期的标的信息列表
     * @param userId
     * @return 标的总信息
     */
    PageDataList<BorrowRepayment> getOverdueGuaranteeList(BorrowModel model); 
    
    /**
     * 获取当前担保公司已经代偿的标的信息列表
     * @param userId
     * @return 标的总信息
     */
    PageDataList<BorrowRepayment> getCompensatedList(BorrowModel model);  
    /**
     * 获取本条投标记录生成待还利息
     * @param tenderId
     * @return
     */
    public double getRepayInterestByTenderId(long tenderId) ;
    /**
     * 即时生息自动还款  ----按照还款状态以及待还时间查询待还列表
     * @param status
     * @param aheadtime
     * @return
     */
    public List<BorrowRepayment> getRepayListByStatus(int status,int aheadtime);
    /**
     * 逾期待还列表
     * @param status  标状态
     * @param aheadtime  
     * @param borrowType  标类型  
     * @param repayType  还款类型 ：1正常还款 2代偿还款
     * @return
     */
    List<BorrowRepayment> getRepayListByStatus(int status,int aheadtime,int repayType);
    /**
     * 获取已偿还利息总额
     * @author guojunhui@ddtkj.com
     * @return
     */
    double getCompensatedInterestSum(String startDate,String endDate);
    /**
     * 获取已偿还本金总额
     * @author guojunhui@ddtkj.com
     * @return
     */
    double getCompensatedCapitalSum(String startDate,String endDate);
    /**
     * 借款人还款金额汇总
     * @param model
     * @return
     */
    public String repaymentAccountTotal(BorrowRepaymentModel model);
    

	/**
	 * 借款人待还管理导出excel使用sql
	 * @param model
	 * @return
	 */
	//JSDP-116 sxy 2015-05-15 start
	List<BorrowRepayment> excelBorrowRepayList(BorrowRepaymentModel model);
	//JSDP-116 sxy 2015-05-15 start
	/**
	 * 借款人逾期管理导出excel使用sql
	 * @param model
	 * @return
	 */
	//JSDP-116 sxy 2015-05-15 start
	List<BorrowRepayment> excelBorrowOverdueList(BorrowRepaymentModel model);
	//JSDP-116 sxy 2015-05-15 start
    
}
