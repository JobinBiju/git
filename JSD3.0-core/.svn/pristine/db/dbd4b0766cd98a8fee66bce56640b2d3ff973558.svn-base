package com.rongdu.p2psys.user.dao.jdbc;

import java.util.List;

import javax.persistence.Query;

import org.springframework.stereotype.Repository;

import com.ddtkj.p2psys.user.domain.User;
import com.ddtkj.p2psys.user.domain.UserLoginHisotry;
import com.rongdu.common.dao.jpa.BaseDaoImpl;
import com.rongdu.p2psys.user.dao.UserLoginHisotryDao;

@Repository("userLoginHisotryDao")
public class UserLoginHisotryDaoImpl extends BaseDaoImpl<UserLoginHisotry>
		implements UserLoginHisotryDao {

	@Override
	public UserLoginHisotry getLastTimeLogin(long userId) throws Exception {

		String sql = " FROM UserLoginHisotry where user_id= :userId ORDER BY login_time DESC ";

		Query query = em.createQuery(sql);
		query.setParameter("userId", userId);
		List<UserLoginHisotry> list = query.getResultList();
		 if(list!=null &&list.size()!=0 &&list.size()>1){
	        	return list.get(1);
	        }
			return null;
	}

	@Override
	public long getLoginFindCount(User user) throws Exception {
		// TODO sql语句有问题
		String sql = " SELECT COUNT(login_time) " + "FROM UserLoginHisotry "
				+ "WHERE user_id = :userId AND login_time > CURDATE() "
				+ "AND loginTime > (SELECT MAX(loginTime) "
				+ "FROM UserLoginHisotry "
				+ "WHERE user_id = :userId AND login_status='Y') "
				+ "AND login_status='N'";

		Query query = em.createQuery(sql);
		query.setParameter("userId", user.getUserId());

		return (Long) query.getSingleResult();
	}

	@Override
	public long getLoginNowDayCount(User user) throws Exception {
		
		String sql = " SELECT COUNT(*) FROM UserLoginHisotry WHERE login_time >= CURDATE() AND user_id=:userId";
		Query query = em.createQuery(sql);
		query.setParameter("userId", user.getUserId());

		return (Long) query.getSingleResult();
	}

}
