package com.ddtkj.p2psys.core.quartz.repay;

import org.apache.log4j.Logger;

import com.ddtkj.p2psys.borrow.service.AutoBorrowService;
import com.ddtkj.p2psys.core.quartz.AbstractLoanTask;
import com.ddtkj.p2psys.errorlog.exception.HandleException;
import com.rongdu.common.util.StringUtil;
import com.rongdu.p2psys.core.Global;
/**
 * 手动还款
 * @author wcw
 *
 */
public class RepayTask extends AbstractLoanTask {
	private Logger logger = Logger.getLogger(RepayTask.class);

	private AutoBorrowService autoBorrowService;
	

	public AutoBorrowService getAutoBorrowService() {
		return autoBorrowService;
	}

	public void setAutoBorrowService(AutoBorrowService autoBorrowService) {
		this.autoBorrowService = autoBorrowService;
	}

	public RepayTask(AutoBorrowService autoBorrowService) {
		super();
		task.setName("Repay.Task");
		this.autoBorrowService = autoBorrowService;
	}

	@Override
	public void doLoan() {
		while (RepayJobQueue.REPAY!=null && RepayJobQueue.REPAY.size() > 0) {
		
			RepayBean rb = RepayJobQueue.REPAY.peek();
			if (rb != null) {
				String result = "success";
				try {
					if("repay".equals(rb.getType())){//正常还款的情况
						autoBorrowService.autoBorrowRepay(rb.getBorrowRepayment());
						result="还款成功";
					}else if("priorRepay".equals(rb.getType())){//提前还款情况
						autoBorrowService.doPriorRepay(rb.getBorrowRepayment());
					} else if ("overdue".equals(rb.getType())) {
						//后台逾期垫付
						autoBorrowService.overdue(rb.getBorrowRepayment());
					}else if ("overduePayment".equals(rb.getType())) {
						//前台逾期垫付
						autoBorrowService.overduePayment(rb.getBorrowRepayment());
					}else if ("doCompensate".equals(rb.getType())) {
		                //汇潮代偿还款校验处理（担保公司代偿还款）
		                autoBorrowService.autoCompensate(rb.getBorrowRepayment());
		            }
					else if ("doCompensateSuccess".equals(rb.getType())) {
		                //汇潮代偿成功处理（担保公司代偿还款）
		                autoBorrowService.autoCompensateSuccess(rb.getBorrowRepayment());
		            }
				} catch (Exception e) {
					logger.error(e.getMessage(),e);
					logger.error(e);
					//JSDBET-812 gjh 2015-3-17 start
					if(e instanceof HandleException){
		                result = e.getMessage();
		            	((HandleException)e).saveExceptionLog((HandleException)e);
		            //JSDBET-812 gjh 2015-3-17 end
		            }else if(e instanceof com.rongdu.common.exception.BussinessException){
		                result = e.getMessage();
		            }else{
		            	result = "系统异常，操作失败！！！";
		            }
					//投标抛异常，一些第三方接口需要将投资金额做解冻等处理
				}finally {
					RepayJobQueue.REPAY.remove(rb);
					 //Global bug wcw  2015-3-26 start
			        Global.removeTransfer();
			      //Global bug wcw 2015-3-26 end
				    if(rb.getResultFlag()!=null){//在需要保存系统处理信息的地方直接保存进来
				    	if(StringUtil.isNotBlank(result)){
			                Global.RESULT_MAP.put(rb.getResultFlag(), result);
			            }
			        }
				}
			}
		}
	}

	@Override
	public Object getLock() {
		return RepayTask.REPAY_STATUS;
	}

}
