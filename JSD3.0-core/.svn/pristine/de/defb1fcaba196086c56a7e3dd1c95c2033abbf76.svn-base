package com.rongdu.p2psys.borrow.service;

import java.util.Date;
import java.util.List;

import com.ddtkj.p2psys.borrow.domain.BorrowTender;
import com.ddtkj.p2psys.user.domain.User;
import com.rongdu.common.model.jpa.PageDataList;
import com.rongdu.p2psys.borrow.domain.BorrowCollection;
import com.rongdu.p2psys.borrow.model.BorrowCollectionModel;

/**
 * 待收Service
 * 
 * @author sj
 * @version 2.0
 * @since 2014年2月26日15:31:10
 */
public interface BorrowCollectionService {

	void save(List<BorrowCollection> list);

	/**
	 * 已赚利息
	 * 
	 * @param userId
	 * @return
	 */
	double getReceivedInterestSum(long userId);
	
	
	/**
	 * 已赚逾期利息
	 * @author 李建云
	 * @param userId
	 * @return
	 */
	double getOverDueInterestSum(long userId);
	
	
	

	/**
	 * 根据标获取用户的待收
	 * 
	 * @param userId
	 * @param borrowId
	 * @return
	 */
	List<BorrowCollection> getListByUserAndBorrow(BorrowTender tender);

	/**
	 * 分页
	 * 
	 * @param model
	 * @return
	 */
	PageDataList<BorrowCollectionModel> list(BorrowCollectionModel model);
	
	// JSDP-206  wcw 2015-07-02 start 
	/**
	 * 前台---我的收益
	 * @param model
	 * @return
	 */
	public PageDataList<BorrowCollectionModel> getBorrowCollectionList(BorrowCollectionModel model);
	// JSDP-206  wcw 2015-07-02 end
	//JSDP-85 gjh 2015-5-4 start
	/**
	 * 第三方对比（分页列表）
	 * 
	 * @param list
	 * @return
	 */
	PageDataList<BorrowCollectionModel> contrast(PageDataList<BorrowCollectionModel> list) throws Exception;
	//JSDP-85 gjh 2015-5-4 end
	
	/**
	 * 获取下一个待收
	 * @param userId 用户ID
	 * @return 待收信息
	 */
	BorrowCollection getNextCollectionByUserId(long userId);
	/**
	 * 待收笔数
	 * @param userId 用户ID
	 * @param collectionStatus 待收状态值
	 * @return 待收笔数
	 */
	int countCollect(long userId,long collectionStatus);
	
	/**
	 * 已收笔数
	 * @param userId 用户ID
	 * @return 待收笔数
	 */
	int countCollected(long userId);
	
	/**
	 * 获取待收的统计信息
	 * @param userId 用户ID
	 * @return 待收的统计信息
	 */
	BorrowCollectionModel getCollectStatistics(long userId);

    /**
     * 
     * @param user
     * @return
     */
    public List<BorrowCollectionModel> investCollectionList(User user);

    /**
     * 累计净收益
     * @param user
     * @return
     */
    public double accumulatedNetIncome(User user);

    /**
     * 在投金额
     * @param user
     * @return
     */
    public double inInvestAmount(User user, int status);

    /**
     * 今日收益
     * @param user
     * @return
     */
    public double sumTodayInterest(User user);
    /**
     * 根据用户获取待收利息总额
     * @param user
     * @return 待收利息总额
     */
    double getInterestByUser(User user);
    
    
    /**
     * @author 李建云
     * 根据用户购买债权获取本月已赚利息总额
     * @param user
     * @return 待收利息总额
     */
    double getInterestByUser(User user,Date startTime,Date endTime);
    
    /**
     * @author 李建云
     * 根据用户购买债权和标类型获取待收利息总额
     * @param user
     * @return 待收利息总额
     */
    double getInterestByUser(User user,int type);
    
    /**
     * 根据用户和时间获取待收利息总额
     * @param user 用户 date 时间
     * @return 待收利息日期和金额
     */
    List<Object[]> getInterestByUserAndDate(User user, String date);
    /**
     * 根据用户获取待收本金总额
     * @param user
     * @return 待收本金总额
     */
    double getCapitalByUser(User user);
    
    /**
     * @author 李建云
     * 根据用户购买债权和标类型获取待收本金总额
     * @param user
     * @return 待收本金总额
     */
    double getCapitalByUser(User user,int type);
    
    /**
     * 根据用户和时间获取待收本金总额
     * @param user 用户 date 时间
     * @return 待收本金日期和金额
     */
    List<Object[]> getCapitalByUserAndDate(User user, String date);
    /**
     * 用户月份代收时间统计
     * @param user 信息
     * @return
     */
    List<String> getCollectionDate(User user);
    
    /**
     * 为用户赚取收益
     * @return
     */
    double sumInterest();
    
    /**
     * @author李建云
     * 本月结清笔数
     *  
     */
    int getCollectedSum(long userId, Date startTime,Date endTime,int type);
    
    /**
     * @author李建云
     * 本月结已赚利息
     *  
     */
    double getBorrowCollectedInterest(long userId, Date startTime,Date endTime);
    
    /**
     *@author 李建云
     *本月已赚逾期利息 
     * */
    double getBorrowCollectedLateInterest(long userId, Date startTime,Date endTime);
    
    /**
     * 即投即生息 查询待收列表
     * @param status
     * @return
     */
    public List<BorrowCollection> getCollectionListByStatus(int status);
    
    /**
     * 根据债权ID获取待收信息
     * @param  caId债权ID
     * @return List<BorrowCollectionModel> 
     * @throws Exception   
     */ 
    PageDataList<BorrowCollectionModel> getCollectionListByCaId(long caId);
    /**
     * 汇总待收的总额
     * @param model
     * @return
     */
    String collectionTotal(BorrowCollectionModel model);

    /**
     * 根据属性获取代收记录
     * @param string
     * @param tender
     * @return
     */
	List<BorrowCollection> findByProperty(String property, Object value);
	/**
	 * 根据id获取代收记录
	 * @param id
	 * @return
	 */
	BorrowCollection find(long id);
	
	/**
	 * 投资人待收导出excel使用sql
	 * @param model
	 * @return
	 */
	//JSDP-116 sxy 2015-05-15 start
	List<BorrowCollection> excelBorrowCollectionList(BorrowCollectionModel model);
	//JSDP-116 sxy 2015-05-15 start
	/**
	 * 查询待收列表个数
	 * @param bcm
	 * @return
	 */
	public int getCollectionListCount(BorrowCollectionModel bcm);

	/**
	 * 查询页数（根据所查询的数据）
	 * 用于分页
	 * @author sxy 20150717
	 * @param model
	 * @return
	 */
	int listPageTotal(BorrowCollectionModel model);
	
	
}
