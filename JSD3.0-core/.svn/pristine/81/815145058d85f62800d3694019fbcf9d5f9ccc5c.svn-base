package com.rongdu.p2psys.tpp.ips.dao.jdbc;

import java.util.List;

import org.springframework.stereotype.Repository;

import com.rongdu.common.dao.jpa.BaseDaoImpl;
import com.rongdu.common.model.jpa.QueryParam;
import com.rongdu.p2psys.tpp.domain.TppIpsPay;
import com.rongdu.p2psys.tpp.ips.dao.TppIpsPayDao;

/**
 * 环迅资金操作日志DAO接口
 * @author hcb
 * @version 1.0
 * @since 2014-08-20
 */
@Repository("tppIpsPayDao")
public class TppIpsPayDaoImpl extends BaseDaoImpl<TppIpsPay> implements TppIpsPayDao {

    @Override
    public Boolean editTppIpsPay(TppIpsPay pay, byte status) {
        StringBuffer sql = new StringBuffer("UPDATE TppIpsPay SET ips_time = :ipsTime,");
        sql.append(" ips_bill_no = :ipsBillNo, status = :status, ips_fee = :ipsFee, end_time = now()");
        sql.append(" WHERE status = :ipsStatus AND mer_bill_no = :merBillNo");
        int result = this.updateByJpql(sql.toString(), 
                new String[]{"ipsTime", "ipsBillNo", "status", "ipsFee", "ipsStatus", "merBillNo"}, 
                new Object[] {pay.getIpsTime(), pay.getIpsBillNo(), pay.getStatus(), pay.getIpsFee(), status, pay.getMerBillNo()});
        if (result < 1) {
            return false;
        }
        // 更新缓存
        em.refresh(getTppIpsPay(pay.getMerBillNo()));
        return true;
    }
    
    @Override
    public Boolean editTppIpsColl(TppIpsPay pay, byte status, long repaymentId) {
        // TODO Auto-generated method stub
        StringBuffer sql = new StringBuffer("UPDATE TppIpsPay SET ips_time = :ipsTime,");
        sql.append(" ips_bill_no = :ipsBillNo, status = :status, ips_fee = :ipsFee, end_time = now()");
        sql.append(" WHERE type = :type AND status = :ipsStatus AND repayment_id = :repaymentId AND mer_bill_no = :merBillNo");
        int result = this.updateByJpql(sql.toString(), 
                new String[]{"ipsTime", "ipsBillNo", "status", "ipsFee", "type", "ipsStatus", "repaymentId", "merBillNo"}, 
                new Object[] {pay.getIpsTime(), pay.getIpsBillNo(), pay.getStatus(), pay.getIpsFee(), pay.getType(), status, repaymentId, pay.getMerBillNo()});
        if (result < 1) {
            return false;
        }
        // 更新缓存
        em.refresh(getTppIpsPay(pay.getMerBillNo()));
        return true;
    }
    

    @Override
    public List<TppIpsPay> getTppIpsPay(String merBillNo, String type) {
        QueryParam param = QueryParam.getInstance();
        param.addParam("merBillNo", merBillNo);
        param.addParam("type", type);
        List<TppIpsPay> payList = this.findByCriteria(param);
        return payList;
    }

    public TppIpsPay getTppIpsPay(String merBillNo) {
        return this.findObjByProperty("merBillNo", merBillNo);
    }
    
    @Override
    public TppIpsPay getTppIpsPayByOriMerBillNo(String oriMerBillNo){
        return this.findObjByProperty("oriMerBillNo", oriMerBillNo);
    }
    @Override
    public TppIpsPay getTppIpsPayByMerBillNo(String merBillNo){
        return this.findObjByProperty("merBillNo", merBillNo);
    }
    @Override
    public TppIpsPay getTppIpsPayByRepayId(long repayId,byte status) {
        // TODO Auto-generated method stub
        QueryParam param = QueryParam.getInstance();
        param.addParam("repaymentId", repayId);
        param.addParam("type", TppIpsPay.TYPE_DO_RAPAY);
        param.addParam("status", status);
        List<TppIpsPay> payList = this.findByCriteria(param);
        if(payList != null && payList.size() > 0){
            return payList.get(0);
        }
        return null;
    }
}
