package com.rongdu.p2psys.web.cooperation;

import java.io.IOException;
import java.net.URLEncoder;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.apache.struts2.convention.annotation.Action;

import com.ddtkj.p2psys.user.domain.User;
import com.ddtkj.p2psys.user.domain.UserIdentify;
import com.ddtkj.p2psys.user.model.UserModel;
import com.opensymphony.xwork2.ModelDriven;
import com.rongdu.common.util.StringUtil;
import com.rongdu.p2psys.cooperation.domain.CooperationLogin;
import com.rongdu.p2psys.cooperation.service.CooperationLoginService;
import com.rongdu.p2psys.cooperation.util.qq.OpenQqUtils;
import com.rongdu.p2psys.cooperation.util.qq.QqGetUserInfoParamBean;
import com.rongdu.p2psys.cooperation.util.qq.QqGetUserInfoResultBean;
import com.rongdu.p2psys.core.constant.Constant;
import com.rongdu.p2psys.core.web.BaseAction;
import com.rongdu.p2psys.user.service.UserIdentifyService;
import com.rongdu.p2psys.user.service.UserService;


public class CooperationQQLoginAction extends BaseAction implements ModelDriven<UserModel>{
	@Resource
	private UserIdentifyService userIdentifyService;
	private Map<String, Object> data;
	
	private UserModel model = new UserModel();
	public UserModel getModel() {
		return model;
	}

	public void setModel(UserModel model) {
		this.model = model;
	}


	private User user = new User();

	
	
	@Resource
	private CooperationLoginService cooperationLoginService;
	@Resource
	private UserService userService;
	
	// 日志
    protected final Logger    log = Logger.getLogger(this.getClass());
	
    @Action("/user/qqLogin")
	public void qqLogin(){
		// QQ互联工具类 
		OpenQqUtils oqu = new OpenQqUtils();
		try {
			request.setAttribute("qqLoginUrl", oqu.getQqLoginUrl());
			response.sendRedirect(oqu.getQqLoginUrl());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
    /**
     *@author 李建云 
     *qq回调处理 
     * 
     * */
    @Action("/user/doQQLogin2")
	public String loginSuccess2()throws IOException {
		// QQ互联工具类 
		OpenQqUtils oqu = new OpenQqUtils();
		// 动态拼接换取accessToken的URL 
		String accessTokenUrl = oqu.getAccessTokenUrl(request.getParameter("code"));
		// AccessToken
		String accessToken = oqu.getAccessToken(accessTokenUrl);
		// OpenId
		String openId = oqu.getOpenId(accessToken);
		
		if(openId == null || openId.length() <= 0  || accessToken == null || accessToken.length() <= 0){
			return "login";
		}
		QqGetUserInfoParamBean paramBean = new QqGetUserInfoParamBean();
		paramBean.setAccessToken(accessToken);
		paramBean.setOpenId(openId);
		QqGetUserInfoResultBean userInfoResultBean = oqu.getUserInfo(paramBean);
		// 判断qq合作登录的接口 获取合作登录会员基本信息失败操作
		if (userInfoResultBean.getErrorFlg()) {
			this.log.error("QQ合作登录_QQ登录信息验证失败 ");
			return "login";
		}
		String getNickname = userInfoResultBean.getNickName();
		//fengguoqin@ddtkj.com   JSDP-31 20150703 start
		if(getNickname != null && getNickname.length() > 0){
			session.put("nickname", getNickname);
		}
		//用户qq头像
		String figureUrlQQ1 =  userInfoResultBean.getFigureurlQQ2();
		if(figureUrlQQ1 != null ){
			session.put("figureUrl", figureUrlQQ1);
		}
		//fengguoqin@ddtkj.com   JSDP-31 20150703 end
		// 封装联合登录信息
		CooperationLogin cooperation = new CooperationLogin();
		cooperation.setOpenId(openId);
		cooperation.setOpenKey(accessToken);
		cooperation.setType(Integer.parseInt(CooperationLogin.TYPE_QQ));
		cooperationLoginService.addCooperationLogin(cooperation);
		
		CooperationLogin qqLogin = cooperationLoginService.getCooperationLogin(openId, Integer.parseInt(CooperationLogin.TYPE_QQ));
		// 如果查询联合登录信息不为空，并且user_id不为空，则说明QQ已被绑定，查询user信息，跳转至登录的action
		if(qqLogin != null && qqLogin.getUserId() > 0){
			/*User user = userService.find(qqLogin.getUserId());
			request.setAttribute("openUser", user);
			try {
				request.getRequestDispatcher("/user/doLogin.html").forward(request, response);
			} catch (ServletException e) {
				e.printStackTrace();
			}*/
				User user = userService.find(qqLogin.getUserId());
				session.put(Constant.SESSION_USER, user);
				UserIdentify userIdentify = userIdentifyService.findById(user.getUserId());
				session.put(Constant.SESSION_USER_IDENTIFY, userIdentify);
				try {
					//fengguoqin@ddtkj.com   JSDP-31 20150619 start   qq联合登录标识
					session.put("CooperationLogin", "CooperationLogin");
					getNickname = URLEncoder.encode(getNickname, "UTF-8");
					this.redirect("/member/main.html");
					//fengguoqin@ddtkj.com   JSDP-31 20150619 end
				} catch (Exception e) {
					e.printStackTrace();
				} 
		}else if(qqLogin != null && qqLogin.getId() > 0 && qqLogin.getUserId() <= 0){// 如果查询联合登录信息不为空，并且user_id为空，则说明QQ未被绑定，跳转至登陆的注册页面
			request.setAttribute("openId", qqLogin.getOpenId());
			request.setAttribute("openType", CooperationLogin.TYPE_QQ);
			return "qqRegister";
		}
		return "login";
	}
    
    /**
     *@author 李建云
     *用户qq绑定
     * */
    @Action("/user/doQQBound")
    public void doQQBound()throws Exception{
    	
    	data = new HashMap<String,Object>();    	
    	try {
    		model.validLoginModel();
    		user = userService.getUserByInfo(model.getUserName());
    		//JSDP-31  fengguoqin 5.21 start
    		model.setOpenType(1);
        	if(user!= null){
        		model.validQQBoundModel(user);
        		if(StringUtil.isNotBlank(model.getOpenId())){
        			CooperationLogin cooperation = new CooperationLogin();
                	cooperation.setOpenId(model.getOpenId());
                	cooperation.setType(1);
                	cooperation.setUserId(user.getUserId());
                	cooperation.setAddTime(new Date());
                 	/*cooperationLoginService.addCooperationLogin(cooperation);*/
                	cooperationLoginService.updateCooperationLogin(cooperation);
                	//JSDP-31  fengguoqin 5.21 end
                	session.put(Constant.SESSION_USER, user);
                	//fengguoqin@ddtkj.com   JSDP-31 20150703 start
                	session.put("CooperationLogin", "CooperationLogin");
                	//fengguoqin@ddtkj.com   JSDP-31 20150703 
                	UserIdentify userIdentify = userIdentifyService.findById(user.getUserId());
    				session.put(Constant.SESSION_USER_IDENTIFY, userIdentify);
                 	data.put("result", true);
        		}else{
        			data.put("msg", "绑定失败！");
            		data.put("result", false);
        		}	
        	}else{
        		data.put("msg", "用户名或手机号或邮箱错误！");
        		data.put("result", false);
        	}	
		} catch (Exception e) {
			data.put("result", false);
			data.put("msg", e.getMessage());
		}
    	printJson(getStringOfJpaObj(data));
    	//JSDP-86 wcw 2015-05-05 start
		data=null;
		//JSDP-86 wcw 2015-05-05 end
    }
    
    /**
	 * 进行用户注册
	 * 
	 * @return 
	 * @throws Exception
	 */
	@Action("/user/doQQRegister")
	public String doQQRegister() throws Exception {
		data = new HashMap<String, Object>();
		String openType = this.paramString("openType");
		String openId = this.paramString("openId");
		if(openType == null || openType.length() <= 0 || openId == null || 
				openId.length() <= 0 || !openType.equals(CooperationLogin.TYPE_QQ)){// 判断数据类型是否正确
			data.put("result", false);
			data.put("msg", "注册失败！");
			return null;
		}
		UserModel userModel = UserModel.instance(user);
		userModel.setValidCode(paramString("validCode"));
		userModel.validRegRule();
		userModel.validRegModel();
		User u = cooperationLoginService.doQQRegister(userModel.prototype(),openType,openId);
		if (u != null) {
			data.put("result", true);
			data.put("msg", "注册成功！");
			data.put("userId", u.getUserId());
			data.put("userName", u.getUserName());
			data.put("email", u.getEmail());
			printJson(getStringOfJpaObj(data));
		} else {
			data.put("result", false);
			data.put("msg", "注册失败！");
		}
		//JSDP-86 wcw 2015-05-05 start
		data=null;
		//JSDP-86 wcw 2015-05-05 end
		return null;
	}
	
	 /**
     *@author 冯国琴
     *qq回调处理  没有任何业务逻辑的 
     * 
     * */
    @Action("/user/doQQLogin")
	public String loginSuccess()throws IOException {
		// QQ互联工具类 
		OpenQqUtils oqu = new OpenQqUtils();
		// 动态拼接换取accessToken的URL 
		String accessTokenUrl = oqu.getAccessTokenUrl(request.getParameter("code"));
		// AccessToken
		String accessToken = oqu.getAccessToken(accessTokenUrl);
		// OpenId
		String openId = oqu.getOpenId(accessToken);
		
		if(openId == null || openId.length() <= 0  || accessToken == null || accessToken.length() <= 0){
			return "login";
		}
		QqGetUserInfoParamBean paramBean = new QqGetUserInfoParamBean();
		paramBean.setAccessToken(accessToken);
		paramBean.setOpenId(openId);
		QqGetUserInfoResultBean userInfoResultBean = oqu.getUserInfo(paramBean);
		// 判断qq合作登录的接口 获取合作登录会员基本信息失败操作
		if (userInfoResultBean.getErrorFlg()) {
			this.log.error("QQ合作登录_QQ登录信息验证失败 ");
			return "login";
		}
		String getNickname = userInfoResultBean.getNickName();
		//fengguoqin@ddtkj.com   JSDP-31 20150703 start
		if(getNickname != null && getNickname.length() > 0){
			session.put("nickname", getNickname);
		}
		//用户qq头像
		String figureUrlQQ1 =  userInfoResultBean.getFigureurlQQ2();
		if(figureUrlQQ1 != null ){
			session.put("figureUrl", figureUrlQQ1);
		}
		this.redirect("/user/qqRegister2.html");
		return null;
	}
    
    /**
     *@author 李建云
     *用户qq绑定
     * */
    @Action("/user/qqRegister2")
    public String  qqRegister2()throws Exception{
      return "qqRegister2";	
    }
}

